{
  "name": "bar123-history-sync-extension",
  "version": "1.0.0",
  "description": "Safari extension for P2P history synchronization",
  "main": "index.js",
  "scripts": {
    "install-deps": "npm install",
    "build": "npm run build-libp2p && npm run build-libp2p-js && npm run bundle-readability && npm run copy-assets",
    "build-libp2p": "cd libp2p-ffi && cargo build --release && cd .. && bash scripts/copy-rust-lib.sh",
    "build-libp2p-ci": "cd libp2p-ffi && cargo build --release && cd .. && node scripts/copy-rust-lib-ci.js",
    "build-libp2p-js": "node scripts/build-libp2p-bundle.js",
    "bundle-readability": "npm run build-readability-bundle && cp dist/readability-bundle.js 'bar123 Extension/Resources/' && cp dist/readability-bundle.js chrome-extension/",
    "build-chrome": "npm run build-libp2p-js && npm run bundle-readability && npm run copy-chrome-assets",
    "build-readability-bundle": "mkdir -p dist && npx esbuild node_modules/@mozilla/readability/Readability.js --bundle --format=iife --global-name=Readability --outfile=dist/readability-bundle.js",
    "copy-chrome-assets": "mkdir -p chrome-extension/images && cp 'bar123 Extension/Resources/images/'* chrome-extension/images/ 2>/dev/null || echo 'Images copied or not found'",
    "copy-assets": "echo 'Assets ready'",
    "dev": "npm run build && npm run serve",
    "serve": "python3 -m http.server 8081 --directory test-pages",
    "xcode": "npm run build && open bar123.xcodeproj",
    "test": "node test/cross-platform-sync-test.js",
    "test-local-multiplatform": "node test/local-multiplatform-test.js",
    "test-all": "npm run test-local-multiplatform",
    "test:e2e": "./test/run-interop-tests.sh",
    "test:js-js": "npx playwright test --project=chrome-to-chrome",
    "test:swift-swift": "xcodebuild test -project bar123.xcodeproj -scheme bar123UITests -destination 'generic/platform=iOS Simulator' -only-testing:bar123UITests/HistorySyncUITests",
    "test:swift-js": "npx playwright test --project=cross-platform",
    "test:interop": "npm run test:e2e",
    "launch-chrome": "node scripts/launch-chrome-extension.js",
    "prepare-profiles": "node scripts/prepare-profiles.js",
    "ios-build": "node scripts/ios-build.js --certificate $RUNNER_TEMP/ios-profiles/certificate.p12 --password $P12_PASSWORD --app-profile $RUNNER_TEMP/ios-profiles/app_profile.mobileprovision --ext-profile $RUNNER_TEMP/ios-profiles/extension_profile.mobileprovision --output $RUNNER_TEMP/build",
    "ios-build-testflight": "npm run prepare-profiles && npm run ios-build -- --upload --apple-id $APPLE_ID --app-password $APP_SPECIFIC_PASSWORD",
    "ios-build-local": "npm run prepare-profiles && npm run ios-build",
    "ci:test": "npm run test 2>&1 | tee test-output.log; TEST_EXIT=${PIPESTATUS[0]}; echo \"TEST_EXIT_CODE=$TEST_EXIT\" >> $GITHUB_ENV; exit $TEST_EXIT",
    "ci:test-local-multiplatform": "npm run test-local-multiplatform 2>&1 | tee local-multiplatform-test-output.log; LOCAL_TEST_EXIT=${PIPESTATUS[0]}; echo \"LOCAL_MULTIPLATFORM_TEST_EXIT_CODE=$LOCAL_TEST_EXIT\" >> $GITHUB_ENV; exit $LOCAL_TEST_EXIT",
    "ci:build-chrome": "npm run build-chrome && cd chrome-extension && zip -r ../chrome-extension-$GITHUB_SHA.zip * && cd ..",
    "ci:build-ios": "npm run ios-build-local 2>&1 | tee ios-build.log; IOS_EXIT=${PIPESTATUS[0]}; echo \"IOS_BUILD_EXIT_CODE=$IOS_EXIT\" >> $GITHUB_ENV; exit $IOS_EXIT",
    "ci:upload-testflight": "npm run prepare-profiles && npm run ios-build -- --upload --apple-id $APPLE_ID --app-password $APP_SPECIFIC_PASSWORD 2>&1 | tee testflight-upload.log; echo \"TESTFLIGHT_EXIT_CODE=${PIPESTATUS[0]}\" >> $GITHUB_ENV",
    "ci:collect-debug": "node scripts/collect-debug-info.js",
    "ci:generate-showcase": "node scripts/generate-showcase-page.js",
    "ci:package-chrome": "echo 'chrome-extension-$GITHUB_SHA.zip'",
    "ci:package-ios": "echo '$RUNNER_TEMP/build/bar123.ipa'",
    "lint": "npm run lint:js && npm run lint:rust && npm run lint:swift",
    "lint:js": "eslint .",
    "lint:rust": "cd libp2p-ffi && cargo clippy -- -D warnings && cargo fmt --check",
    "lint:swift": "if command -v swiftlint >/dev/null 2>&1; then swiftlint --strict; else echo 'SwiftLint not installed, skipping Swift linting'; fi",
    "lint:fix": "npm run lint:fix:js && npm run lint:fix:rust && npm run lint:fix:swift",
    "lint:fix:js": "eslint . --fix",
    "lint:fix:rust": "cd libp2p-ffi && cargo clippy --fix --allow-dirty --allow-staged && cargo fmt",
    "lint:fix:swift": "if command -v swiftlint >/dev/null 2>&1; then swiftlint --fix && swiftlint --format; else echo 'SwiftLint not installed, skipping Swift formatting'; fi",
    "lint:check": "npm run lint:js -- --max-warnings 0 && npm run lint:rust && npm run lint:swift"
  },
  "keywords": [
    "safari",
    "extension",
    "p2p",
    "history",
    "sync",
    "libp2p",
    "webrtc"
  ],
  "dependencies": {
    "@mozilla/readability": "^0.6.0",
    "@chainsafe/libp2p-gossipsub": "^14.0.0",
    "@chainsafe/libp2p-noise": "^16.0.0",
    "@chainsafe/libp2p-yamux": "^7.0.0",
    "@libp2p/bootstrap": "^11.0.0",
    "@libp2p/identify": "^3.0.0",
    "@libp2p/kad-dht": "^13.0.0",
    "@libp2p/webrtc": "^5.0.0",
    "@libp2p/websockets": "^9.0.0",
    "libp2p": "^2.0.0",
    "buffer": "^6.0.3",
    "stream-browserify": "^3.0.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.52.0",
    "commander": "^11.1.0",
    "esbuild": "^0.25.4",
    "eslint": "^9.27.0",
    "playwright": "^1.52.0",
    "puppeteer": "^22.8.2",
    "selenium-webdriver": "^4.15.0"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "author": "History Sync Extension",
  "license": "MIT"
}
